#!/usr/bin/env python3

from requests import request
import json, os

client_user = "{{ proxmox_script_user }}"
client_password = "{{ proxmox_script_password }}"
client_url = "{{ proxmox_script_url }}"


### ProxMoxClient class ###
class ProxMoxClient:
# initialize the client with the url, username and password file, authenticate immediately
    def __init__(self, url, username, password):
        self.url = url
        self.username = username
        self.password = password
        self.ticket = self.authenticate_proxmox()

# authenticate to proxmox
    def authenticate_proxmox(self):
        url = f"{self.url}/access/ticket"
        data = {
            "username": self.username,
            "password": self.password,
        }
        response = request("POST", url, data=data, verify=False)
        if response.status_code != 200:
            raise PermissionError(
                f"Request failed with status code {response.status_code}, please check your credentials")
        else:
            return response.json()["data"]["ticket"]

    def get_resources_info_per_type(self, type):
        url = f"{self.url}/cluster/resources?type={type}"
        cookies = {"PVEAuthCookie": self.ticket}
        response = request("GET", url, cookies=cookies, verify=False)
        return response.json()['data']

client = ProxMoxClient(client_url, client_user, client_password)

resource = client.get_resources_info_per_type("node")
# parser.write_results(resource, "vnode.json")
nodes = {}
nodestats = []
for node in resource:
    if node["status"]=="offline":
        continue
    else:
        maxmem = node["maxmem"]
        mem = node["mem"]
        mempercent = round((mem/maxmem)*100, 2)
        nodes[mempercent] = node["node"]
sorted_nodes = list(sorted(nodes.items()))
print(sorted_nodes[0][1])